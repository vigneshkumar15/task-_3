// Simulate the inventory in localStorage
const inventoryKey = 'inventory';

// Load books from localStorage when the page loads
document.addEventListener('DOMContentLoaded', loadInventory);

// Add or update book
document.getElementById('book-form').addEventListener('submit', function (e) {
    e.preventDefault();

    const bookId = document.getElementById('book-id').value;
    const title = document.getElementById('title').value;
    const author = document.getElementById('author').value;
    const genre = document.getElementById('genre').value;
    const quantity = document.getElementById('quantity').value;

    const book = { title, author, genre, quantity };

    if (bookId) {
        // Update existing book
        updateBook(bookId, book);
    } else {
        // Add new book
        addBook(book);
    }

    // Reset the form
    document.getElementById('book-form').reset();
    document.getElementById('book-id').value = '';
});

// Load books from localStorage
function loadInventory() {
    const inventory = getInventory();
    const tableBody = document.querySelector('#inventory-table tbody');

    tableBody.innerHTML = ''; // Clear the table
    inventory.forEach(book => {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${book.id}</td>
            <td>${book.title}</td>
            <td>${book.author}</td>
            <td>${book.genre}</td>
            <td>${book.quantity}</td>
            <td>
                <button onclick="editBook(${book.id})">Edit</button>
                <button onclick="deleteBook(${book.id})">Delete</button>
            </td>
        `;
        tableBody.appendChild(row);
    });
}

// Get inventory from localStorage
function getInventory() {
    const inventory = JSON.parse(localStorage.getItem(inventoryKey)) || [];
    return inventory;
}

// Add new book to inventory
function addBook(book) {
    const inventory = getInventory();
    const newBook = { ...book, id: Date.now() }; // Unique ID
    inventory.push(newBook);
    localStorage.setItem(inventoryKey, JSON.stringify(inventory));
    loadInventory();
}

// Update an existing book
function updateBook(bookId, updatedBook) {
    const inventory = getInventory();
    const bookIndex = inventory.findIndex(book => book.id == bookId);
    if (bookIndex >= 0) {
        inventory[bookIndex] = { ...inventory[bookIndex], ...updatedBook };
        localStorage.setItem(inventoryKey, JSON.stringify(inventory));
        loadInventory();
    }
}

// Edit book - populate form for editing
function editBook(bookId) {
    const inventory = getInventory();
    const book = inventory.find(book => book.id == bookId);
    if (book) {
        document.getElementById('book-id').value = book.id;
        document.getElementById('title').value = book.title;
        document.getElementById('author').value = book.author;
        document.getElementById('genre').value = book.genre;
        document.getElementById('quantity').value = book.quantity;
    }
}

// Delete a book
function deleteBook(bookId) {
    const inventory = getInventory();
    const updatedInventory = inventory.filter(book => book.id != bookId);
    localStorage.setItem(inventoryKey, JSON.stringify(updatedInventory));
    loadInventory();
}
